---
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";

import Layout from "@/layouts/dashboard.astro";
import TemplateSelector from "@/components/dashboard/templates/TemplateSelector";
import { getFirestore } from "firebase-admin/firestore";
import { app } from "@/firebase/server";

const db = getFirestore(app);
const settings = db.collection("settings").doc("template");

const defaultValue = (await settings.get()).data()?.id || "";
---

<Layout title="Templates">
  <div class="grid gap-6">
    <Card>
      <CardHeader>
        <CardTitle>Template</CardTitle>
        <CardDescription>
          The selected template will be used to display in the main path.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form id="templateForm" class="flex flex-col gap-2">
          <TemplateSelector
            client:load
            id="template-selector"
            defaultValue={defaultValue}
          />

          <div>
            <Button type="submit">Save</Button>
          </div>
        </form>
      </CardContent>
    </Card>
  </div>
</Layout>

<script>
  let templateForm = document.getElementById("templateForm")!;
  templateForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    let templateId = (
      document.getElementById("template-selector") as HTMLInputElement
    ).value;

    if (!templateId.trim()) return;

    try {
      const response = await fetch("/api/settings/template", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: templateId }),
      });

      if (response.ok) {
        alert("Configuración guardada correctamente");
        location.reload();
      } else {
        alert("Error al guardar la configuración");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Error en el servidor");
    }
  });
</script>
